// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: task_template_service.proto

package task_template

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskTemplate message mirrors the GORM model structure
type TaskTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32                 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"` // Using uint32 as GORM default ID is uint
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	TaskType       string                 `protobuf:"bytes,4,opt,name=task_type,json=taskType,proto3" form:"task_type" json:"task_type,omitempty" query:"task_type"`
	ParamSchema    string                 `protobuf:"bytes,5,opt,name=param_schema,json=paramSchema,proto3" form:"param_schema" json:"param_schema,omitempty" query:"param_schema"`      // JSON schema string
	ResultSchema   string                 `protobuf:"bytes,6,opt,name=result_schema,json=resultSchema,proto3" form:"result_schema" json:"result_schema,omitempty" query:"result_schema"` // JSON schema string
	ExecutorType   string                 `protobuf:"bytes,7,opt,name=executor_type,json=executorType,proto3" form:"executor_type" json:"executor_type,omitempty" query:"executor_type"`
	CronExpression string                 `protobuf:"bytes,8,opt,name=cron_expression,json=cronExpression,proto3" form:"cron_expression" json:"cron_expression,omitempty" query:"cron_expression"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" form:"created_at" json:"created_at,omitempty" query:"created_at"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" form:"updated_at" json:"updated_at,omitempty" query:"updated_at"`
}

func (x *TaskTemplate) Reset() {
	*x = TaskTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTemplate) ProtoMessage() {}

func (x *TaskTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTemplate.ProtoReflect.Descriptor instead.
func (*TaskTemplate) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{0}
}

func (x *TaskTemplate) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskTemplate) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskTemplate) GetParamSchema() string {
	if x != nil {
		return x.ParamSchema
	}
	return ""
}

func (x *TaskTemplate) GetResultSchema() string {
	if x != nil {
		return x.ResultSchema
	}
	return ""
}

func (x *TaskTemplate) GetExecutorType() string {
	if x != nil {
		return x.ExecutorType
	}
	return ""
}

func (x *TaskTemplate) GetCronExpression() string {
	if x != nil {
		return x.CronExpression
	}
	return ""
}

func (x *TaskTemplate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskTemplate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateTaskTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Description    string `protobuf:"bytes,2,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	TaskType       string `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3" form:"task_type" json:"task_type,omitempty" query:"task_type"`
	ParamSchema    string `protobuf:"bytes,4,opt,name=param_schema,json=paramSchema,proto3" form:"param_schema" json:"param_schema,omitempty" query:"param_schema"`
	ResultSchema   string `protobuf:"bytes,5,opt,name=result_schema,json=resultSchema,proto3" form:"result_schema" json:"result_schema,omitempty" query:"result_schema"`
	ExecutorType   string `protobuf:"bytes,6,opt,name=executor_type,json=executorType,proto3" form:"executor_type" json:"executor_type,omitempty" query:"executor_type"`
	CronExpression string `protobuf:"bytes,7,opt,name=cron_expression,json=cronExpression,proto3" form:"cron_expression" json:"cron_expression,omitempty" query:"cron_expression"`
}

func (x *CreateTaskTemplateRequest) Reset() {
	*x = CreateTaskTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskTemplateRequest) ProtoMessage() {}

func (x *CreateTaskTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskTemplateRequest) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetParamSchema() string {
	if x != nil {
		return x.ParamSchema
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetResultSchema() string {
	if x != nil {
		return x.ResultSchema
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetExecutorType() string {
	if x != nil {
		return x.ExecutorType
	}
	return ""
}

func (x *CreateTaskTemplateRequest) GetCronExpression() string {
	if x != nil {
		return x.CronExpression
	}
	return ""
}

type CreateTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *TaskTemplate `protobuf:"bytes,1,opt,name=template,proto3" form:"template" json:"template,omitempty" query:"template"`
}

func (x *CreateTaskTemplateResponse) Reset() {
	*x = CreateTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskTemplateResponse) ProtoMessage() {}

func (x *CreateTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTaskTemplateResponse) GetTemplate() *TaskTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type GetTaskTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
}

func (x *GetTaskTemplateRequest) Reset() {
	*x = GetTaskTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskTemplateRequest) ProtoMessage() {}

func (x *GetTaskTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTaskTemplateRequest) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskTemplateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *TaskTemplate `protobuf:"bytes,1,opt,name=template,proto3" form:"template" json:"template,omitempty" query:"template"`
}

func (x *GetTaskTemplateResponse) Reset() {
	*x = GetTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskTemplateResponse) ProtoMessage() {}

func (x *GetTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskTemplateResponse) GetTemplate() *TaskTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type ListTaskTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTaskTemplatesRequest) Reset() {
	*x = ListTaskTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskTemplatesRequest) ProtoMessage() {}

func (x *ListTaskTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListTaskTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{5}
}

type ListTaskTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*TaskTemplate `protobuf:"bytes,1,rep,name=templates,proto3" form:"templates" json:"templates,omitempty" query:"templates"` // string next_page_token = 2;
}

func (x *ListTaskTemplatesResponse) Reset() {
	*x = ListTaskTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskTemplatesResponse) ProtoMessage() {}

func (x *ListTaskTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListTaskTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListTaskTemplatesResponse) GetTemplates() []*TaskTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

type UpdateTaskTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty" query:"description"`
	TaskType       string `protobuf:"bytes,4,opt,name=task_type,json=taskType,proto3" form:"task_type" json:"task_type,omitempty" query:"task_type"`
	ParamSchema    string `protobuf:"bytes,5,opt,name=param_schema,json=paramSchema,proto3" form:"param_schema" json:"param_schema,omitempty" query:"param_schema"`
	ResultSchema   string `protobuf:"bytes,6,opt,name=result_schema,json=resultSchema,proto3" form:"result_schema" json:"result_schema,omitempty" query:"result_schema"`
	ExecutorType   string `protobuf:"bytes,7,opt,name=executor_type,json=executorType,proto3" form:"executor_type" json:"executor_type,omitempty" query:"executor_type"`
	CronExpression string `protobuf:"bytes,8,opt,name=cron_expression,json=cronExpression,proto3" form:"cron_expression" json:"cron_expression,omitempty" query:"cron_expression"` // google.protobuf.FieldMask update_mask = 9; // For partial updates
}

func (x *UpdateTaskTemplateRequest) Reset() {
	*x = UpdateTaskTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskTemplateRequest) ProtoMessage() {}

func (x *UpdateTaskTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskTemplateRequest) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTaskTemplateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTaskTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetParamSchema() string {
	if x != nil {
		return x.ParamSchema
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetResultSchema() string {
	if x != nil {
		return x.ResultSchema
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetExecutorType() string {
	if x != nil {
		return x.ExecutorType
	}
	return ""
}

func (x *UpdateTaskTemplateRequest) GetCronExpression() string {
	if x != nil {
		return x.CronExpression
	}
	return ""
}

type UpdateTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *TaskTemplate `protobuf:"bytes,1,opt,name=template,proto3" form:"template" json:"template,omitempty" query:"template"`
}

func (x *UpdateTaskTemplateResponse) Reset() {
	*x = UpdateTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskTemplateResponse) ProtoMessage() {}

func (x *UpdateTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTaskTemplateResponse) GetTemplate() *TaskTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type DeleteTaskTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
}

func (x *DeleteTaskTemplateRequest) Reset() {
	*x = DeleteTaskTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_template_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskTemplateRequest) ProtoMessage() {}

func (x *DeleteTaskTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_template_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskTemplateRequest) Descriptor() ([]byte, []int) {
	return file_task_template_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTaskTemplateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_task_template_service_proto protoreflect.FileDescriptor

var file_task_template_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xfd, 0x02, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x6f, 0x6e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x84, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x6f, 0x6e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x32, 0xcd, 0x04, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x74, 0x61, 0x73, 0x6b, 0x2d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_task_template_service_proto_rawDescOnce sync.Once
	file_task_template_service_proto_rawDescData = file_task_template_service_proto_rawDesc
)

func file_task_template_service_proto_rawDescGZIP() []byte {
	file_task_template_service_proto_rawDescOnce.Do(func() {
		file_task_template_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_task_template_service_proto_rawDescData)
	})
	return file_task_template_service_proto_rawDescData
}

var file_task_template_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_task_template_service_proto_goTypes = []interface{}{
	(*TaskTemplate)(nil),               // 0: proto.task_template.TaskTemplate
	(*CreateTaskTemplateRequest)(nil),  // 1: proto.task_template.CreateTaskTemplateRequest
	(*CreateTaskTemplateResponse)(nil), // 2: proto.task_template.CreateTaskTemplateResponse
	(*GetTaskTemplateRequest)(nil),     // 3: proto.task_template.GetTaskTemplateRequest
	(*GetTaskTemplateResponse)(nil),    // 4: proto.task_template.GetTaskTemplateResponse
	(*ListTaskTemplatesRequest)(nil),   // 5: proto.task_template.ListTaskTemplatesRequest
	(*ListTaskTemplatesResponse)(nil),  // 6: proto.task_template.ListTaskTemplatesResponse
	(*UpdateTaskTemplateRequest)(nil),  // 7: proto.task_template.UpdateTaskTemplateRequest
	(*UpdateTaskTemplateResponse)(nil), // 8: proto.task_template.UpdateTaskTemplateResponse
	(*DeleteTaskTemplateRequest)(nil),  // 9: proto.task_template.DeleteTaskTemplateRequest
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 11: google.protobuf.Empty
}
var file_task_template_service_proto_depIdxs = []int32{
	10, // 0: proto.task_template.TaskTemplate.created_at:type_name -> google.protobuf.Timestamp
	10, // 1: proto.task_template.TaskTemplate.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: proto.task_template.CreateTaskTemplateResponse.template:type_name -> proto.task_template.TaskTemplate
	0,  // 3: proto.task_template.GetTaskTemplateResponse.template:type_name -> proto.task_template.TaskTemplate
	0,  // 4: proto.task_template.ListTaskTemplatesResponse.templates:type_name -> proto.task_template.TaskTemplate
	0,  // 5: proto.task_template.UpdateTaskTemplateResponse.template:type_name -> proto.task_template.TaskTemplate
	1,  // 6: proto.task_template.TaskTemplateService.CreateTaskTemplate:input_type -> proto.task_template.CreateTaskTemplateRequest
	3,  // 7: proto.task_template.TaskTemplateService.GetTaskTemplate:input_type -> proto.task_template.GetTaskTemplateRequest
	5,  // 8: proto.task_template.TaskTemplateService.ListTaskTemplates:input_type -> proto.task_template.ListTaskTemplatesRequest
	7,  // 9: proto.task_template.TaskTemplateService.UpdateTaskTemplate:input_type -> proto.task_template.UpdateTaskTemplateRequest
	9,  // 10: proto.task_template.TaskTemplateService.DeleteTaskTemplate:input_type -> proto.task_template.DeleteTaskTemplateRequest
	2,  // 11: proto.task_template.TaskTemplateService.CreateTaskTemplate:output_type -> proto.task_template.CreateTaskTemplateResponse
	4,  // 12: proto.task_template.TaskTemplateService.GetTaskTemplate:output_type -> proto.task_template.GetTaskTemplateResponse
	6,  // 13: proto.task_template.TaskTemplateService.ListTaskTemplates:output_type -> proto.task_template.ListTaskTemplatesResponse
	8,  // 14: proto.task_template.TaskTemplateService.UpdateTaskTemplate:output_type -> proto.task_template.UpdateTaskTemplateResponse
	11, // 15: proto.task_template.TaskTemplateService.DeleteTaskTemplate:output_type -> google.protobuf.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_task_template_service_proto_init() }
func file_task_template_service_proto_init() {
	if File_task_template_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_task_template_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_template_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_task_template_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_task_template_service_proto_goTypes,
		DependencyIndexes: file_task_template_service_proto_depIdxs,
		MessageInfos:      file_task_template_service_proto_msgTypes,
	}.Build()
	File_task_template_service_proto = out.File
	file_task_template_service_proto_rawDesc = nil
	file_task_template_service_proto_goTypes = nil
	file_task_template_service_proto_depIdxs = nil
}
